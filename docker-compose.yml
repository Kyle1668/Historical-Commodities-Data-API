version: "3.7"
services:
  api_server:
    build: ./api
    container_name: bdf-challenge-rest-api
    restart: always
    ports:
      - "8080:8080"
    env_file: .env
    environment:
      FLASK_ENV: production
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PASSWORD}
    depends_on:
      - web_scraper

  web_scraper:
    build: ./scraper
    container_name: bdf-challenge-web-scraper
    environment:
      ENV: production
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
    depends_on:
      - database

  database:
    image: postgres:11.3-alpine
    container_name: bdf-challenge-postgress-db
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5430:5432"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 3